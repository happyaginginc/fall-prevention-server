name: CI on main (Build & Push Docker)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-and-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build and Test (Gradle)
        run: |
          gradle clean build -x test
          gradle test

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push Docker Image
        if: always()
        run: |
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/fall-prevention"

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # PR 이벤트인 경우
            IMAGE_TAG="pr-${{ github.event.number }}-${{ github.sha }}"
          else
            # 일반 push 이벤트인 경우
            IMAGE_TAG="main-${{ github.sha }}"
          fi

          echo "IMAGE_NAME=$IMAGE_NAME"
          echo "IMAGE_TAG=$IMAGE_TAG"

          # Docker 빌드
          docker build -t $IMAGE_NAME:$IMAGE_TAG -f Dockerfile .

          # Docker 푸시
          docker push $IMAGE_NAME:$IMAGE_TAG
